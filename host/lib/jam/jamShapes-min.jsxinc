// jamShapes.jsxinc v4.5 (minified)
if(typeof jamShapes!=='object') {var jamShapes={};(function() {jamShapes.isCustomShapesFile=function(file) {return(file.type==='8BCS')||file.name.match(/\.csh$/i);};jamShapes.isCustomShapesPrefsFile=function(file) {return file.name.match(/^CustomShapes.psp$/i);};jamShapes.dataFromCustomShapesFile=function(shapesFile,shapeIndex) {function skipBytes(file,byteCount) {file.seek(byteCount,1);} function readBEInt(file,byteCount) {var bytes=file.read(byteCount);var intValue=0;for(var index=0;index<byteCount;index++) {intValue=(intValue<<8)+bytes.charCodeAt(index);} return intValue;} function readBytes(file,byteCount) {return file.read(byteCount);} function readPascalString(file) {var stringLength=readBEInt(file,1);return readBytes(file,stringLength);} function readUnicodeStringWithPadding(file) {var unicodeString="";var unicodeLength=readBEInt(file,4);for(var index=0;index<unicodeLength;index++) {var unicodeChar=readBEInt(file,2);if(unicodeChar!==0) {unicodeString+=String.fromCharCode(unicodeChar);}} if((unicodeLength%2)!==0) {skipBytes(file,2);} return unicodeString;} function readSignedBEInt32(file) {var intValue=readBEInt(file,4);return(intValue<0x80000000)?intValue:(intValue-0x100000000);} function readSignedBEFixed32(file) {return readSignedBEInt32(file)/0x1000000;} var file;if(typeof shapesFile==='string') {file=new File(shapesFile);} else if(shapesFile instanceof File) {file=shapesFile;} else {throw new Error('[jamShapes.dataFromCustomShapesFile] Invalid argument');} var selectorStrings=["closedLength","closedLinked","closedUnlinked","openLength","openLinked","openUnlinked","pathFill","clipboard","initialFill"];var fileData;if(file.open("r")) {try {file.encoding='BINARY';var magicNumber=file.read(4);if(magicNumber==='cush') {var fileVersion=readBEInt(file,4);if(fileVersion===2) {fileData={};fileData["fileVersion"]=fileVersion;var customShapes=[];var customShapeCount=readBEInt(file,4);for(var customShapeIndex=0;customShapeIndex<customShapeCount;customShapeIndex++) {var customShape={};customShape["name"]=localize(readUnicodeStringWithPadding(file));var unknown=jamUtils.dataToHexaString(readBytes(file,4));var dataLength=readBEInt(file,4);var dataStart=file.tell();customShape["ID"]=readPascalString(file);if((typeof shapeIndex==='undefined')||(shapeIndex===customShapeIndex)) {var top=readSignedBEInt32(file);var left=readSignedBEInt32(file);var bottom=readSignedBEInt32(file);var right=readSignedBEInt32(file);customShape["bounds"]=[top,left,bottom,right];var pathRecords=[];var pathRecordCount=Math.floor((dataStart+dataLength-file.tell())/(2+8+8+8));for(var pathRecordIndex=0;pathRecordIndex<pathRecordCount;pathRecordIndex++) {var pathRecord=[];var selector=readBEInt(file,2);if((selector>=0)&&(selector<selectorStrings.length)) {pathRecord.push(selectorStrings[selector]);} else {throw new Error("[jamShapes.dataFromCustomShapesFile] Unknown selector: "+selector);} switch(selector) {case 6:pathRecord.push(null);skipBytes(file,24);break;case 8:pathRecord.push(readBEInt(file,2));skipBytes(file,24-2);break;case 0:case 3:pathRecord.push(readBEInt(file,2));skipBytes(file,24-2);break;case 1:case 2:case 4:case 5:pathRecord.push ([[readSignedBEFixed32(file),readSignedBEFixed32(file)],[readSignedBEFixed32(file),readSignedBEFixed32(file)],[readSignedBEFixed32(file),readSignedBEFixed32(file)]]);break;default:pathRecord.push(null);skipBytes(file,24);break;} pathRecords.push(pathRecord);} customShape["pathRecords"]=pathRecords;} file.seek(dataStart+dataLength,0);customShapes.push(customShape);} fileData["customShapes"]=customShapes;} else {fileData="Unrecognized custom shapes file version: "+fileVersion;}} else {fileData="Unrecognized custom shapes file magic number: '"+magicNumber+"'";}} catch(e) {fileData=e.message;} finally {file.close();}} else {fileData="Cannot open file";} return fileData;};jamShapes.debugMode=false;jamShapes.pathComponentsFromCustomShape=function(customShape,shapeOperation,bounds,constrainProportions) {var rectangle=bounds[0];var unit=bounds[1];var left=rectangle[0];var top=rectangle[1];var right=rectangle[2];var bottom=rectangle[3];var width=right-left;var height=bottom-top;if(constrainProportions) {var adjustmentFactor=1;if((typeof unit!=='undefined')&&(jamEngine.uniIdStrToId(unit)===jamEngine.uniIdStrToId("percentUnit"))) {var saveMeaningfulIds=jamEngine.meaningfulIds;var saveParseFriendly=jamEngine.parseFriendly;jamEngine.meaningfulIds=true;jamEngine.parseFriendly=true;var resultDescObj=jamEngine.jsonGet([{"document":["<enumerated>",["ordinal","first"]]}]);jamEngine.meaningfulIds=saveMeaningfulIds;jamEngine.parseFriendly=saveParseFriendly;adjustmentFactor=resultDescObj["width"][1][1]/resultDescObj["height"][1][1];} var boundsRatio=(width/height)*adjustmentFactor;var shapeWidth=customShape["bounds"][3]-customShape["bounds"][1];var shapeHeight=customShape["bounds"][2]-customShape["bounds"][0];var shapeRatio=shapeWidth/shapeHeight;if(shapeRatio>boundsRatio) {shapeHeight=(width/shapeRatio)*adjustmentFactor;top+=(height-shapeHeight)/2;height=shapeHeight;} else {shapeWidth=(height*shapeRatio)/adjustmentFactor;left+=(width-shapeWidth)/2;width=shapeWidth;}} var subpaths=[];if(this.debugMode) {var subpath=[[[left,top]],[[left+width,top]],[[left+width,top+height]],[[left,top+height]]];subpaths.push([subpath,true]);} else {var pathRecords=customShape["pathRecords"];var subLength=0;for(var pathRecordIndex=0;pathRecordIndex<pathRecords.length;pathRecordIndex++) {var pathRecord=pathRecords[pathRecordIndex];var selector=pathRecord[0];var data=pathRecord[1];switch(selector) {case"closedLength":case"openLength":subLength=data;var closedSubpath=(selector==="closedLength");var subpath=[];break;case"closedLinked":case"closedUnlinked":case"openLinked":case"openUnlinked":var backward=[left+(data[0][1]*width),top+(data[0][0]*height)];var anchor=[left+(data[1][1]*width),top+(data[1][0]*height)];var forward=[left+(data[2][1]*width),top+(data[2][0]*height)];var smooth=(selector==="closedLinked")||(selector==="openLinked");subpath.push([anchor,forward,backward,smooth]);if(--subLength===0) {subpaths.push([subpath,closedSubpath]);} break;}}} var pathComponentsArr=[[[shapeOperation,subpaths]]];if(unit) {pathComponentsArr.push(unit);} return pathComponentsArr;};}());}
