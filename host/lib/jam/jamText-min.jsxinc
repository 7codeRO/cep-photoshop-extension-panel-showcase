// jamText.jsxinc v4.5 (minified)
if(typeof jamText!=='object') {var jamText={};(function() {jamText.toLayerTextObject=function(layerText) {var typeUnit;if("typeUnit"in layerText) {typeUnit=layerText["typeUnit"];} var data=layerText["layerText"];function restoreDesc(desc,hintData) {var restoredDesc={};for(var key in desc) {if(desc.hasOwnProperty(key)) {var value=desc[key];var typedValue=null;var restoredList;switch(key) {case"bookKey":typedValue=["<data>",value];break;case"rowMajorOrder":case"syntheticBold":case"syntheticItalic":case"autoLeading":case"ligature":case"altligature":case"contextualLigatures":case"alternateLigatures":case"oldStyle":case"fractions":case"ordinals":case"swash":case"titling":case"connectionForms":case"stylisticAlternates":case"ornaments":case"proportionalMetrics":case"kana":case"italics":case"ruby":case"enableWariChu":case"noBreak":case"fill":case"stroke":case"fillFirst":case"fillOverPrint":case"strokeOverPrint":case"hyphenate":case"hyphenateCapitalized":case"hangingRoman":case"keepTogether":case"kurikaeshiMojiShori":case"textEveryLineComposer":case"flip":typedValue=["<boolean>",value];break;case"textKey":case"fontPostScriptName":case"fontName":case"fontStyleName":case"book":case"name":typedValue=["<string>",value];break;case"rowCount":case"columnCount":case"from":case"to":case"fontScript":case"fontTechnology":case"tracking":case"wariChuCount":case"wariChuLineGap":case"wariChuWidow":case"wariChuOrphan":case"tcyUpDown":case"tcyLeftRight":case"jiDori":case"bookID":case"dropCapMultiplier":case"hyphenateWordSize":case"hyphenatePreLength":case"hyphenatePostLength":case"hyphenateLimit":case"autoTCY":case"kerning":case"pathTypeSpacing":typedValue=["<integer>",value];break;case"warpValue":case"warpPerspective":case"warpPerspectiveOther":case"xx":case"xy":case"yx":case"yy":case"tx":case"ty":case"top":case"left":case"bottom":case"right":case"horizontalScale":case"verticalScale":case"characterRotation":case"mojiZume":case"wariChuScale":case"a":case"b":case"black":case"blue":case"brightness":case"cyan":case"gray":case"green":case"luminance":case"magenta":case"red":case"saturation":case"yellowColor":case"lineDashoffset":case"autoLeadingPercentage":case"hyphenationZone":case"hyphenationPreference":case"justificationWordMinimum":case"justificationWordDesired":case"justificationWordMaximum":case"justificationLetterMinimum":case"justificationLetterDesired":case"justificationLetterMaximum":case"justificationGlyphMinimum":case"justificationGlyphDesired":case"justificationGlyphMaximum":case"defaultTabWidth":case"start":case"end":typedValue=["<double>",value];break;case"rowGutter":case"columnGutter":case"spacing":case"firstBaselineMinimum":case"size":case"leading":case"baselineShift":case"underlineOffset":case"lineWidth":case"miterLimit":case"firstLineIndent":case"startIndent":case"endIndent":case"spaceBefore":case"spaceAfter":typedValue=(typeUnit)?["<unitDouble>",[typeUnit,value]]:["<double>",value];break;case"horizontal":case"vertical":typedValue=(hintData)?["<unitDouble>",[hintData,value]]:["<double>",value];break;case"hue":typedValue=["<unitDouble>",["angleUnit",value]];break;case"warpStyle":case"textGridding":case"orientation":case"textType":case"frameBaselineAlignment":case"autoKern":case"fontCaps":case"baseline":case"otbaseline":case"strikethrough":case"underline":case"figureStyle":case"baselineDirection":case"textLanguage":case"japaneseAlternate":case"gridAlignment":case"wariChuJustification":case"lineCap":case"lineJoin":case"leadingType":case"burasagari":case"preferredKinsokuOrder":case"pathTypeEffect":case"pathTypeAlignment":case"pathTypeAlignTo":typedValue=["<enumerated>",[key,value]];break;case"antiAlias":typedValue=["<enumerated>",["antiAliasType",value]];break;case"warpRotate":typedValue=["<enumerated>",["orientation",value]];break;case"alignment":case"singleWordJustification":typedValue=["<enumerated>",["alignmentType",value]];break;case"textShape":case"textStyleRange":case"paragraphStyleRange":case"kerningRange":restoredList=[];for(var i=0;i<value.length;i++) {restoredList.push(["<object>",[key,restoreDesc(value[i])]]);} typedValue=["<list>",restoredList];break;case"warp":case"transform":case"textStyle":case"paragraphStyle":typedValue=["<object>",[key,restoreDesc(value)]];break;case"defaultStyle":typedValue=["<object>",["textStyle",restoreDesc(value)]];break;case"color":case"strokeColor":var colorClass;if((("book"in value)&&("name"in value))||(("bookID"in value)&&("bookKey"in value))) {colorClass="bookColor";} else if(("cyan"in value)&&("magenta"in value)&&("yellowColor"in value)&&("black"in value)) {colorClass="CMYKColorClass";} else if("gray"in value) {colorClass="grayscale";} else if(("hue"in value)&&("saturation"in value)&&("brightness"in value)) {colorClass="HSBColorClass";} else if(("luminance"in value)&&("a"in value)&&("b"in value)) {colorClass="labColor";} else if(("red"in value)&&("green"in value)&&("blue"in value)) {colorClass="RGBColor";} typedValue=["<object>",[colorClass,restoreDesc(value)]];break;case"textClickPoint":typedValue=["<object>",["point",restoreDesc(value,"percentUnit")]];break;case"base":typedValue=["<object>",["point",restoreDesc(value)]];break;case"bounds":typedValue=["<object>",["rectangle",restoreDesc(value)]];break;case"path":typedValue=["<object>",["pathClass",{"pathComponents":jamHelpers.toPathComponentList(value)}]];break;case"tRange":typedValue=["<object>",["range",restoreDesc(value)]];break;case"textLayer":typedValue=["<object>",["textLayer",restoreDesc(value)]];break;case"mojiKumiName":case"kinsokuSetName":if(true) {typedValue=["<enumerated>",[key,value]];} else {typedValue=["<string>",value];} break;case"leftAki":case"rightAki":if(true) {typedValue=["<double>",value];} else {typedValue=(typeUnit)?["<unitDouble>",[typeUnit,value]]:["<double>",value];} break;} if(typedValue) {restoredDesc[key]=typedValue;}}} return restoredDesc;} return restoreDesc({"textLayer":data})["textLayer"];};jamText.fromLayerTextObject=function(layerTextObject) {var layerText={};var typeUnit;var typeDone=false;function getUnitsHook(desc,key) {var result;if(key==="path") {result=jamHelpers.fromPathComponentList(desc[key][1][1]["pathComponents"],true);} else if(!typeDone) {switch(key) {case"rowGutter":case"columnGutter":case"spacing":case"firstBaselineMinimum":case"size":case"leading":case"baselineShift":case"underlineOffset":case"lineWidth":case"miterLimit":case"firstLineIndent":case"startIndent":case"endIndent":case"spaceBefore":case"spaceAfter":case"leftAki":case"rightAki":var value=desc[key];if(value[0]==="<unitDouble>") {typeUnit=value[1][0];} typeDone=true;break;}} return result;} layerText["layerText"]=jamEngine.simplifyObject(layerTextObject,getUnitsHook);if(typeUnit) {layerText["typeUnit"]=typeUnit;} return layerText;};jamText.setLayerText=function(layerText) {var saveMeaningfulIds=jamEngine.meaningfulIds;var saveParseFriendly=jamEngine.parseFriendly;jamEngine.meaningfulIds=true;jamEngine.parseFriendly=true;var isTextLayer=false;try {resultObj=jamEngine.jsonGet ([{"property":{"<property>":"textKey"}},{"layer":{"<enumerated>":{"ordinal":"targetEnum"}}}]);if("textKey"in resultObj) {isTextLayer=true;}} catch(e) {} jamEngine.meaningfulIds=saveMeaningfulIds;jamEngine.parseFriendly=saveParseFriendly;if(isTextLayer) {jamEngine.jsonPlay ("set",{"target":["<reference>",[["layer",["<enumerated>",["ordinal","targetEnum"]]]]],"to":this.toLayerTextObject(layerText)});} else {jamEngine.jsonPlay ("make",{"target":["<reference>",[["textLayer",["<class>",null]]]],"using":this.toLayerTextObject(layerText)});}};jamText.getLayerText=function() {var layerTextObj=null;var saveMeaningfulIds=jamEngine.meaningfulIds;var saveParseFriendly=jamEngine.parseFriendly;jamEngine.meaningfulIds=true;jamEngine.parseFriendly=true;try {var resultObj=jamEngine.jsonGet ([{"property":{"<property>":"textKey"}},{"layer":{"<enumerated>":{"ordinal":"targetEnum"}}}]);if("textKey"in resultObj) {layerTextObj=this.fromLayerTextObject(resultObj["textKey"]);}} catch(e) {} jamEngine.meaningfulIds=saveMeaningfulIds;jamEngine.parseFriendly=saveParseFriendly;return layerTextObj;};}());}
